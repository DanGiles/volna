#
# The following environment variables should be predefined:
#
# OP2_INSTALL_PATH
# HDF5_INSTALL_PATH
# MPI_INSTALL_PATH
#

#
# set paths for header files and libraries
#

OP2_INC = -I$(OP2_INSTALL_PATH)/c/include
OP2_LIB = -L$(OP2_INSTALL_PATH)/c/lib

HDF5_INC = -I$(HDF5_INSTALL_PATH)/include
HDF5_LIB = -L$(HDF5_INSTALL_PATH)/lib -lhdf5_hl -lhdf5 -lz

MPI_INC = -I$(MPI_INSTALL_PATH)/include

CUDA_INC	= -I$(CUDA_INSTALL_PATH)/include
CUDA_LIB	= -L$(CUDA_INSTALL_PATH)/lib64

ifdef PARMETIS_INSTALL_PATH
PARMETIS_INC 	= -I$(PARMETIS_INSTALL_PATH) -DHAVE_PARMETIS
PARMETIS_LIB 	= -L$(PARMETIS_INSTALL_PATH) -lparmetis \
	-L$(PARMETIS_INSTALL_PATH) -lmetis
endif

ifdef PTSCOTCH_INSTALL_PATH
PTSCOTCH_INC 	= -I$(PTSCOTCH_INSTALL_PATH)/include -DHAVE_PTSCOTCH
PTSCOTCH_LIB 	= -L$(PTSCOTCH_INSTALL_PATH)/lib/ -lptscotch \
	-L$(PTSCOTCH_INSTALL_PATH)/lib/ -lptscotcherr
endif

ifeq ($(OP2_COMPILER),gnu)
	CPP = g++
	CPPFLAGS = -g -O0 -msse3 -fPIC -DUNIX -Wall
	#CPPFLAGS = -g -fPIC -DUNIX -Wall -O0 -arch x86_64 #-DDEBUG
	OMPFLAGS = -fopenmp
	MPICPP = mpic++
	MPIFLAGS = $(CPPFLAGS)
else
ifeq ($(OP2_COMPILER),intel)
	CPP = icpc
	CPPFLAGS = -g -O0 -vec-report -xSSE4.2 -parallel
	#CPPFLAGS = -g -vec-report -xSSE4.2 -parallel
	OMPFLAGS = -openmp -openmp-report2
	MPICPP = mpiCC
	MPIFLAGS = $(CPPFLAGS)
else
print:
	@echo "unrecognized value for OP2_COMPILER"
endif
endif

#
# set flags for NVCC compilation and linking
#

NVCCFLAGS	= -arch=sm_20 -Xptxas=-v -Dlcm=ca -use_fast_math -O3 -m64 #-g -G

#
# master to make all versions
#

all: clean volna volna_openmp volna_cuda volna_mpi volna_mpi_openmp volna_mpi_cuda

volna: volna.cpp Makefile
	$(MPICPP) $(CPPFLAGS) volna.cpp volna_event.cpp volna_init.cpp volna_output.cpp volna_simulation.cpp $(HDF5_INC) $(OP2_INC) $(HDF5_LIB) $(OP2_LIB) -lop2_seq -lop2_hdf5 -o volna

volna_openmp: volna_op.cpp volna_init_op.cpp volna_output_op.cpp volna_simulation_op.cpp Makefile
	$(MPICPP) $(CPPFLAGS) $(OMPFLAGS)  volna_op.cpp volna_init_op.cpp volna_output_op.cpp volna_simulation_op.cpp volna_event.cpp volna_kernels.cpp $(HDF5_INC) $(OP2_INC) $(HDF5_LIB) $(OP2_LIB) -lop2_openmp -lop2_hdf5 -o volna_openmp


#
# CUDA version using kernel files generated by op2.m
#

volna_cuda:	volna_op.cpp volna_kernels_cu.o volna_simulation_op.cpp volna_init_op.cpp volna_output_op.cpp Makefile
	$(MPICPP) $(VAR) $(CPPFLAGS) volna_op.cpp volna_simulation_op.cpp volna_event.cpp volna_init_op.cpp volna_output_op.cpp volna_kernels_cu.o \
	$(CUDA_INC) $(OP2_INC) $(HDF5_INC) \
	$(OP2_LIB) $(CUDA_LIB) -lcudart -lop2_cuda -lop2_hdf5 $(HDF5_LIB) -o volna_cuda

volna_kernels_cu.o:	volna_kernels.cu \
	EvolveValuesRK2_1.h EvolveValuesRK2_2.h applyConst.h getMaxElevation.h getTotalVol.h \
	initBathymetry_formula.h initBathymetry_update.h initBore_select.h initEta_formula.h initGaussianLandslide.h \
	initU_formula.h initV_formula.h NumericalFluxes.h simulation_1.h \
	values_operation2.h applyConst_kernel.cu EvolveValuesRK2_1_kernel.cu \
	EvolveValuesRK2_2_kernel.cu applyConst_kernel.cu getMaxElevation_kernel.cu getTotalVol_kernel.cu \
	initBathymetry_formula_kernel.cu initBathymetry_update_kernel.cu initBore_select_kernel.cu initEta_formula_kernel.cu \
	initGaussianLandslide_kernel.cu initU_formula_kernel.cu initV_formula_kernel.cu NumericalFluxes_kernel.cu \
	simulation_1_kernel.cu \
	values_operation2_kernel.cu Makefile

	nvcc  $(VAR) $(INC) $(NVCCFLAGS) $(OP2_INC) $(HDF5_INC) -I$(MPI_INC) -c -o volna_kernels_cu.o volna_kernels.cu

volna_mpi: volna.cpp volna_event.cpp volna_init.cpp volna_output.cpp volna_simulation.cpp Makefile
	$(MPICPP) $(MPIFLAGS) volna.cpp volna_event.cpp volna_init.cpp volna_output.cpp volna_simulation.cpp $(OP2_INC) $(PARMETIS_INC) $(PTSCOTCH_INC) $(HDF5_INC) \
	$(OP2_LIB) -lop2_mpi $(PARMETIS_LIB) $(PTSCOTCH_LIB) $(HDF5_LIB) -o volna_mpi

volna_mpi_openmp: volna_op.cpp volna_init_op.cpp volna_output_op.cpp volna_simulation_op.cpp Makefile
	$(MPICPP) $(VAR) $(CPPFLAGS) $(OMPFLAGS) $(OP2_INC) $(OP2_INC) $(HDF5_INC) \
	$(PARMETIS_INC) $(PTSCOTCH_INC) \
	volna_op.cpp volna_init_op.cpp volna_output_op.cpp volna_simulation_op.cpp -lm volna_kernels.cpp $(OP2_LIB) -lop2_mpi \
	$(PARMETIS_LIB) $(PTSCOTCH_LIB) $(HDF5_LIB) -o volna_mpi_openmp

volna_mpi_cuda: volna_op.cpp volna_simulation_op.cpp volna_init_op.cpp volna_output_op.cpp volna_kernels_mpi_cu.o Makefile
	$(MPICPP) $(MPIFLAGS) volna_op.cpp volna_simulation_op.cpp volna_init_op.cpp volna_output_op.cpp -lm volna_kernels_mpi_cu.o \
	$(OP2_INC) $(PARMETIS_INC) $(PTSCOTCH_INC) $(HDF5_INC) \
	$(OP2_LIB) -lop2_mpi_cuda $(PARMETIS_LIB) $(PTSCOTCH_LIB) \
	$(HDF5_LIB) $(CUDA_LIB) -lcudart -o volna_mpi_cuda

volna_kernels_mpi_cu.o: volna_kernels.cu Makefile
	nvcc  $(INC) $(NVCCFLAGS) $(OP2_INC) -I $(MPI_INSTALL_PATH)/include \
	-c -o volna_kernels_mpi_cu.o volna_kernels.cu

#
# cleanup
#

clean:
	rm -f volna volna_openmp volna_cuda volna_mpi volna_mpi_openmp volna_mpi_cuda *.o

